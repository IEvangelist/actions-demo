<div class="grid">
    <button type="button"
        class="btn-close btn-close-white" 
        aria-label="Close" @onclick=@(_ => LocalStorage.Clear())>
    </button>
    <div class="code">
        <pre>localStorage.length: @LocalStorage.Length()</pre>
    </div>
</div>
<div id="gallery" class="carousel slide">
    <div class="carousel-inner">
        @foreach (var (i, image) in ImageNames.Select((image, index) => (index, image)))
        {
            <div class="carousel-item @(i == _selectedIndex ? "active" : "")">
                <img class="rounded mx-auto d-block img-dotnet-yellow-shadow"
                    src="gallery/@(image)"
                    alt=".NET bot image named @image">
            </div>
        }
    </div>

    <button class="carousel-control-prev" type="button"
        data-bs-target="#gallery" data-bs-slide="prev"
        @onclick=@PreviousIndex>
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button"
        data-bs-target="#gallery" data-bs-slide="next"
        @onclick=@NextIndex>
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

@code {
    int _selectedIndex = 0;
    const string Key = "bot-gallery-index";

    [Inject]
    public IJSInProcessRuntime LocalStorage { get; set; } = null!;

    [Parameter]
    public string[] ImageNames { get; set; } = Array.Empty<string>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _selectedIndex = LocalStorage.GetItem<int>(Key);
    }

    void PreviousIndex()
    {
        _selectedIndex = (_selectedIndex - 1 + ImageNames.Length) % ImageNames.Length;
        LocalStorage.SetItem(Key, _selectedIndex);
    }

    void NextIndex()
    {
        _selectedIndex = (_selectedIndex + 1) % ImageNames.Length;
        LocalStorage.SetItem(Key, _selectedIndex.ToString());
    }
}